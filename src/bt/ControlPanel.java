/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bt;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import org.joda.time.DateTime;
import org.joda.time.format.DateTimeFormat;

/**
 *
 * @author gabor_hanacsek
 */
public class ControlPanel extends javax.swing.JDialog {

    /**
     * Creates new form LoaderPanel
     */
    int x;
    int y;

    MainWindow m;

    public ControlPanel(java.awt.Frame parent, boolean modal, MainWindow m) {
        super(parent, modal);

        initComponents();
        this.jTable1.setDefaultRenderer(Object.class, new LoaderRenderer(this));
        jScrollPane1.getViewport().setOpaque(false);
        jScrollPane2.getViewport().setOpaque(false);
        this.m = m;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new BackgroundPanel(Variables.background.controlpanelkulso);
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new BackgroundPanel(Variables.background.controlpanelbelso);
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new BackgroundPanel(Variables.background.controlpanelbelso);
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel5 = new BackgroundPanel(Variables.background.controlpanelbelso);
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setOpacity(0.95F);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Control Panel", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.BELOW_TOP));

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jScrollPane1.setOpaque(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "JOB", "PartNumber", "WorkStation", "Qty", "Start date", "CT (DB/h)", "Komment", "M"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setOpaque(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(135);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(135);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(135);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(135);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(135);
            jTable1.getColumnModel().getColumn(7).setResizable(false);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(5);
        }

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 51));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/tervplus.png"))); // NOI18N
        jLabel2.setToolTipText("Tervek hozzáadása");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 51, 51));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/tablatorles.png"))); // NOI18N
        jLabel3.setToolTipText("Tábla törlése!");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jTextField1.setText("Prefix+évhét");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/tervplus.png"))); // NOI18N
        jLabel4.setText("JOB adagoló!");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 596, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Tervek hozzáadása", jPanel1);

        jScrollPane2.setOpaque(false);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "JOB", "TAB", "TAB", "PN", "TAB", "TAB", "QTY", "TAB", "RELEASED", "TAB", "DATETIME", "*DN"
            }
        ));
        jTable2.setOpaque(false);
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 866, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Data loader", jPanel3);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setBorder(javax.swing.BorderFactory.createTitledBorder("Műszakvezetői komment:"));
        jTextArea1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextArea1KeyReleased(evt);
            }
        });
        jScrollPane5.setViewportView(jTextArea1);

        jScrollPane6.setBorder(javax.swing.BorderFactory.createTitledBorder("Adatok a szakban:"));

        jTextPane1.setContentType("text/html"); // NOI18N
        jScrollPane6.setViewportView(jTextPane1);
        jTextPane1.getAccessibleContext().setAccessibleDescription("");

        jScrollPane7.setBorder(javax.swing.BorderFactory.createTitledBorder("Címlista:"));

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane7.setViewportView(jTextArea2);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/sendmail.gif"))); // NOI18N
        jLabel7.setToolTipText("Levél küldése!");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane7)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 538, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jTabbedPane1.addTab("Műszakjelentés", jPanel5);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/close_1.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1))
            .addComponent(jTabbedPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(881, 472));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
        this.setLocation(evt.getXOnScreen() - x, evt.getYOnScreen() - y);
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        // ha kiválaztjuk a dateloader fület
        if (jTabbedPane1.getSelectedIndex() == 1) {
            dataLoaderDataMaker();

        } //ha kiválasztjuk a műszakjelentés fület
        else if (jTabbedPane1.getTitleAt(jTabbedPane1.getSelectedIndex()).equals("Műszakjelentés")) {
            //bekerjuk a cimlistat
            cimlistabeker();
            muszakjelentesToControlPanel();

        }

    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void dataLoaderDataMaker() {
        DateTime now = new org.joda.time.DateTime();
        String pattern = "dd-MMM-yyyy 00:00:00";
        org.joda.time.format.DateTimeFormatter formatter = DateTimeFormat.forPattern(pattern);
        String most = formatter.print(now);
        //a dataloader adatokat állítja össze a backendsheeten található po-kbol ahol a státus a nem létezik 42 q ban
        //kiszedjük a be sheetet
        BeSheet b = (BeSheet) m.jTabbedPane1.getComponentAt(m.jTabbedPane1.getSelectedIndex());
        //kell egy táblamodell is és ki kel nullázni
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        //végigjárjuk az elemeit és ha po 
        for (int i = 0; i < b.jPanel1.getComponentCount(); i++) {

            if (b.jPanel1.getComponent(i) instanceof PlannObject) {

                PlannObject po = (PlannObject) b.jPanel1.getComponent(i);
                //ha a po státusza notexist
                if (po.getStat().equals(Variables.status.NotExists)) {

                    model.addRow(new Object[]{po.getJob(), "TAB", "TAB", po.getPn(), "TAB", "TAB", po.getTerv(), "TAB", "RELEASED", "TAB", most, "*DN"});
                }

            }

        }

        jTable2.setModel(model);

    }

    public void sendMail() {
        //a muszakjelentes elkuldese
        BeSheet b = (BeSheet) m.jTabbedPane1.getComponentAt(m.jTabbedPane1.getSelectedIndex());
        //megszerkesztjuk a targyat
        String subject = "Műszakjelentés " + m.jTabbedPane1.getTitleAt(m.jTabbedPane1.getSelectedIndex()) + " " + b.vtstartime;
        //kell egy levelkuldo
        Levelkuldes l = new Levelkuldes(subject, jTextPane1.getText() + b.muszakjelentes, jTextArea2.getText(), "Muszakjelentes@sanmina.com");
        l.start();

    }


    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        //tervek hozzáadása
//csak azokat adjuk hozzá, amik benne vannak az adatokban!! (pn,ws,ciklusidő)
        if (jLabel2.isEnabled()) {
            addTerv();
        }

    }//GEN-LAST:event_jLabel2MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // ha ráklikkelünk a plusz gombra, adatok felvitele

        if (jTable1.getSelectedColumn() == 7) {
            PlanConnect pc = null;
            try {
                pc = new PlanConnect();

//fel kell tolteni a pn-t a ws-t , ciklusidőt és a kommentet majd
//pn feltoltese
                String insertquery = "";
                try {
                    insertquery = "insert ignore tc_bepns (partnumber) values ('" + jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString().trim() + "')";
                    pc.st.executeUpdate(insertquery);
                } catch (Exception e) {
                    // m.error.setVisible(true, "Nem adtál meg PN-t, így nem tudjuk feltölteni!");
                    JOptionPane.showMessageDialog(m,
                            "Nem adtál meg PN-t, így nem tudjuk feltölteni!",
                            "Feltöltési hiba!",
                            JOptionPane.ERROR_MESSAGE);
                    Starter.e.sendMessage(e);
                    return;
                }
//ws feltoltese
                try {
                    insertquery = "insert ignore tc_bestations (workstation) values ('" + jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString().trim() + "')";
                    pc.st.executeUpdate(insertquery);
                } catch (Exception e) {
                    Starter.e.sendMessage(e);
//                    m.error.setVisible(true, "Nem adtál meg WS-t, így nem tudjuk feltölteni!");
                    JOptionPane.showMessageDialog(m,
                            "Nem adtál meg WS-t, így nem tudjuk feltölteni!",
                            "Feltöltési hiba!",
                            JOptionPane.ERROR_MESSAGE);
                    return;
                }
//prodmatrix feltoltese
                try {
                    insertquery = "insert ignore tc_prodmatrix (id_tc_bepns,id_tc_becells,id_tc_bestations,ciklusido,pk) values ((select tc_bepns.idtc_bepns from tc_bepns where tc_bepns.partnumber = '" + jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString().trim() + "') , (select tc_becells.idtc_cells from tc_becells where tc_becells.cellname = '" + MainWindow.jTabbedPane1.getTitleAt(MainWindow.jTabbedPane1.getSelectedIndex()) + "'), (select tc_bestations.idtc_bestations from tc_bestations where tc_bestations.workstation = '" + jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString().trim() + "'), '" + Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString()) + "',(concat((select tc_bepns.idtc_bepns from tc_bepns where tc_bepns.partnumber = '" + jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString().trim() + "') , (select tc_becells.idtc_cells from tc_becells where tc_becells.cellname = '" + MainWindow.jTabbedPane1.getTitleAt(MainWindow.jTabbedPane1.getSelectedIndex()) + "'), (select tc_bestations.idtc_bestations from tc_bestations where tc_bestations.workstation = '" + jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString().trim() + "'))))\n"
                            + "on duplicate key update tc_prodmatrix.ciklusido = values(ciklusido)";
                    pc.st.executeUpdate(insertquery);
                } catch (Exception e) {
                    Starter.e.sendMessage(e);
//                    m.error.setVisible(true, "<html>Nem adtál meg ciklusidőt, így nem tudjuk feltölteni!</html>");
                    JOptionPane.showMessageDialog(m,
                            "Nem adtál meg ciklusidőt, így nem tudjuk feltölteni!",
                            "Feltöltési hiba!",
                            JOptionPane.ERROR_MESSAGE);
                    return;

                }
//updatelni kell a kommentet is
                try {
                    insertquery = "insert ignore pn_data (PartNumber, Comment) values ('" + jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString().trim() + "','" + jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString().trim() + "') on duplicate key update pn_data.Comment = values(Comment)";
                    pc.st.executeUpdate(insertquery);
                } catch (Exception e) {
                    e.printStackTrace();
                    Starter.e.sendMessage(e);
                }
                adatlekerBeSheetrol();
                MainWindow.pnCommentLeker();
                jTable1.repaint();

//                m.okpanel.setVisible(true, "Az adatokat felvittük!");
                JOptionPane.showMessageDialog(m,
                        "Az adatokat felvittük!");
            } catch (Exception e) {
                e.printStackTrace();
                Starter.e.sendMessage(e);
            } finally {
                pc.kinyir();

            }
            //frissítjük az adatokat a backendsheeten
            BeSheet b = (BeSheet) m.jTabbedPane1.getComponentAt(m.jTabbedPane1.getSelectedIndex());
            b.adatleker(b.getName());

        }


    }//GEN-LAST:event_jTable1MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        tablaTorol();
    }//GEN-LAST:event_jLabel3MouseClicked

    public void muszakjelentesToBesheets() {
//a muszakjelentes szoveget eltaroljuk a sheeten
        BeSheet b = (BeSheet) m.jTabbedPane1.getComponentAt(m.jTabbedPane1.getSelectedIndex());
        b.muszakjelentes = "<html><br><h2>További megjegyzés: </h2><br>" + jTextArea1.getText() + "</html>";

    }

    //a muszakjelentes szoveget visszakerjuk a sheetrol
    public void muszakjelentesToControlPanel() {
        try {
            BeSheet b = (BeSheet) m.jTabbedPane1.getComponentAt(m.jTabbedPane1.getSelectedIndex());
            jTextArea1.setText(b.muszakjelentes);
        } catch (Exception e) {
            e.printStackTrace();
            Starter.e.sendMessage(e);
        }

    }


    private void jTextArea1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea1KeyReleased
        // a muszakjelentes szoveget eltaroljuk a besheeten
        muszakjelentesToBesheets();
    }//GEN-LAST:event_jTextArea1KeyReleased

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        //muszakjlelentes elkuldese
        sendMail();
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        //job adagoló
        Thread t = new Thread(new JobAdagolo((BeSheet) m.jTabbedPane1.getComponentAt(m.jTabbedPane1.getSelectedIndex())));
        t.start();
    }//GEN-LAST:event_jLabel4MouseClicked

    public void cimlistabeker() {

        //behuzzuk a cimlistat
        String query = "SELECT Muszakjelentes.Cím FROM planningdb.Muszakjelentes";
        PlanConnect pc = null;
        //cimlista string
        String cimlista = "";
        try {
            pc = new PlanConnect();

            try {
                pc.lekerdez(query);
            } catch (Exception e) {
                e.printStackTrace();
                Starter.e.sendMessage(e);

            }

            try {
                while (pc.rs.next()) {

                    cimlista += pc.rs.getString(1) + ",\n";
                }
            } catch (SQLException e) {
                e.printStackTrace();
                Starter.e.sendMessage(e);
            }
        } catch (Exception e) {
            e.printStackTrace();
            Starter.e.sendMessage(e);
        } finally {
            pc.kinyir();
        }

        //levagjuk az utolso biszbaszt
        cimlista = cimlista.substring(0, cimlista.length() - 1);
        //beallitjuk a műszakjelentés szövegeként
        jTextArea2.setText(cimlista);

    }

    public void tablaTorol() {
        //kinullázunk mindent a táblán
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) jTable1.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {

            for (int o = 0; o < model.getColumnCount(); o++) {

                model.setValueAt(null, i, o);
            }
        }

        jTable1.setModel(model);

    }

    public void addTerv() {
//a tervek hozzáadása a loaderből
        BeSheet b = (BeSheet) m.jTabbedPane1.getComponentAt(m.jTabbedPane1.getSelectedIndex());
        //végigmegyünk a loader táblán
        outerloop:
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            //ha van írva pn megnezzuk, hogy van e darabszam irva, ha nincs szolunk
            try {
                if (!jTable1.getValueAt(i, 1).toString().equals("")) {
                    try {
                        Integer.parseInt(jTable1.getValueAt(i, 3).toString());
                    } catch (Exception e) {
                        //custom title, error icon
                        JOptionPane.showMessageDialog(m,
                                "Nem adtál meg darabszámot a " + (i + 1) + "-ik sorban!\n Ezt a sort nem töltjük be!",
                                "Hiba!",
                                JOptionPane.ERROR_MESSAGE);
                    }

                }
            } catch (Exception e) {
            }

            try {
//azokkal a sorokkal foglalkozunk ahol nem nulla  pn ws qty
                if (!jTable1.getValueAt(i, 1).toString().equals("") && !jTable1.getValueAt(i, 2).toString().equals("") && Integer.parseInt(jTable1.getValueAt(i, 3).toString()) > 0) {
//kiszedjük a pn-t és leellenőrizzük, hogy fel van e vive az adatok közé
                    String pn = jTable1.getValueAt(i, 1).toString().trim();
                    String ws = jTable1.getValueAt(i, 2).toString().trim();
                    String job = "";
                    String startdate = "";
                    try {
                        job = jTable1.getValueAt(i, 0).toString().trim();
                    } catch (Exception e) {
//                        e.printStackTrace();
//                        Starter.e.sendMessage(e);

                    }
                    try {
                        startdate = jTable1.getValueAt(i, 4).toString().trim();
                        //leellenőrizzük hogy a startdátum megfelelő formátumú e
                        if (!Pattern.matches("[0-9]{4}[-][0-9]{2}[-][0-9]{2}[ ][0-9]{2}[:][0-9]{2}[:][0-9]{2}", startdate)) {
                            //custom title, error icon
                            JOptionPane.showMessageDialog(m,
                                    "A Strat dátumot nem a megfelelő formátumban adtad meg! Elvárt: yyyy-MM-dd hh:mm:ss",
                                    "Hiba",
                                    JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                    } catch (Exception e) {
//                        e.printStackTrace();
//                        Starter.e.sendMessage(e);

                    }
                    for (int c = 0; c < b.gyarthatosagiadatok.size(); c++) {

                        if (b.gyarthatosagiadatok.get(c)[0].trim().equals(pn.trim()) && b.gyarthatosagiadatok.get(c)[1].trim().equals(ws.trim())) {

//ha találunk olyan kombot ami fel van vive akkor csinálunk plann objectet
                            try {
                                PlannObject po = new PlannObject(b, 200, 75, pn.trim(), job, startdate, Integer.parseInt(jTable1.getValueAt(i, 3).toString()), 0, "", "", 0.00, 0, ws.trim(), Double.parseDouble(jTable1.getValueAt(i, 5).toString()), m);
                                b.jPanel1.add(po);
                                b.repaint();
                            } catch (Exception e) {
                                e.printStackTrace();
                                Starter.e.sendMessage(e);
                            }

                            continue outerloop;
                        }

                    }
//ha ide eljutunk akkor nem szerepelt ilyen adat, kiirjuk a hibát
//                    m.error.setVisible(true, "<html>A következő tétel nem kerül felvételre!<br>PN: " + pn + " WS: " + ws + "<br>Javítsd a hibát és próbáld újból!</html>");
                    JOptionPane.showMessageDialog(m,
                            "<html>A következő tétel nem kerül felvételre!<br>PN: " + pn + " WS: " + ws + "<br>Javítsd a hibát és próbáld újból!</html>",
                            "Feltöltési hiba!",
                            JOptionPane.ERROR_MESSAGE);

                }

            } catch (Exception e) {

            }
        }

    }

    public void adatlekerBeSheetrol() {
        //a terv hozzáadásához kell
        new ExcelAdapter(jTable1, this);
        try {
//hozzáadjuk egy comboboxhoz az adatokat
            BeSheet b = (BeSheet) m.jTabbedPane1.getComponentAt(m.jTabbedPane1.getSelectedIndex());
            JComboBox<String> PncomboBox = new AutoCompleteComboBox(b.pnlist.toArray());

            JComboBox<String> WscomboBox = new AutoCompleteComboBox(b.wslist.toArray());

            TableColumn pncolumn = jTable1.getColumnModel().getColumn(1);
            pncolumn.setCellEditor(new DefaultCellEditor(PncomboBox));
            TableColumn wscolumn = jTable1.getColumnModel().getColumn(2);
            wscolumn.setCellEditor(new DefaultCellEditor(WscomboBox));
        } catch (Exception e) {
            e.printStackTrace();
            Starter.e.sendMessage(e);
        }
    }

    @Override
    public void setVisible(boolean b) {
        super.setVisible(b);
        adatlekerBeSheetrol();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            Starter.e.sendMessage(e);
        }

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    public static javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    public static javax.swing.JTabbedPane jTabbedPane1;
    public static javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    public static javax.swing.JTextField jTextField1;
    public static javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
